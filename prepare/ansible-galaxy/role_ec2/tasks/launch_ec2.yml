--- 
- 
  name: "Create a security group"
  local_action:
    description: "security group for webservers"
    module: ec2_group
    name: "{{security_group}}"
    region: "{{region}}"
    rules:
      -
        cidr_ip: 0.0.0.0/0
        from_port: 22
        proto: tcp
        to_port: 22
      -
        cidr_ip: 0.0.0.0/0
        from_port: 80
        proto: tcp
        to_port: 80
    rules_egress:
      -
        cidr_ip: 0.0.0.0/0
        proto: all

-
  name: "Create a key pair"
  ec2_key:
     name={{ keypair }}
     region={{region}}
  register: private_key

- name: "check status"
  stat: path=~/Desktop/ansible-training/prepare/keypair/{{keypair}}
  register: keypair_file

- name: "create keypair file"
  file: path=~/Desktop/ansible-training/prepare/keypair/{{keypair}} state=touch mode=0777 force=yes

- name: "insert keypair content"
  blockinfile:
    dest: ~/Desktop/ansible-training/prepare/keypair/{{keypair}}
    content: |
         {{private_key.private_key}}
  when: private_key.private_key is defined


-
  name: "Launch the new EC2 Instance"
  ec2:
     group={{security_group}}
     image={{image}}
     instance_type={{instance_type}}
     wait=true
     region={{region}}
     keypair={{keypair}}
     exact_count={{count}}
     vpc_subnet_id={{subnet_id}}
     assign_public_ip=yes
     aws_access_key={{aws_access_key}}
     aws_secret_key={{aws_secret_key}}
  register: ec2
-
  name: "Add the newly created EC instances to local host group"
  lineinfile:
      dest=./hosts
      regexp="{{item.public_ip}}"
      insertafter="[webserver]"
      line="{{ item.public_ip }}"
  with_items: ec2.instances

-
  name: "Wait for SSH to come up"
  local_action: "wait_for host={{ item.public_ip }} port=22 state=started"
  with_items: ec2.instances
-
  name: "Add tag to Instance(s)"
  local_action: "ec2_tag resource={{ item.id }} region={{ region }} state=present"
  args:
    tags:
      Name: webserver
  with_items: ec2.instances
